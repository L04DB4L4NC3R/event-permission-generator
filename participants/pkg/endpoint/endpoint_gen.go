// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "angadsharma1016/omega/src/participants/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreatePEndpoint        endpoint.Endpoint
	ReadPEndpoint          endpoint.Endpoint
	UpdatePEndpoint        endpoint.Endpoint
	DeletePEndpoint        endpoint.Endpoint
	CreateFeedbackEndpoint endpoint.Endpoint
	ReadFeedbackEndpoint   endpoint.Endpoint
	PostAttendanceEndpoint endpoint.Endpoint
	ReadAttendanceEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.ParticipantsService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateFeedbackEndpoint: MakeCreateFeedbackEndpoint(s),
		CreatePEndpoint:        MakeCreatePEndpoint(s),
		DeletePEndpoint:        MakeDeletePEndpoint(s),
		PostAttendanceEndpoint: MakePostAttendanceEndpoint(s),
		ReadAttendanceEndpoint: MakeReadAttendanceEndpoint(s),
		ReadFeedbackEndpoint:   MakeReadFeedbackEndpoint(s),
		ReadPEndpoint:          MakeReadPEndpoint(s),
		UpdatePEndpoint:        MakeUpdatePEndpoint(s),
	}
	for _, m := range mdw["CreateP"] {
		eps.CreatePEndpoint = m(eps.CreatePEndpoint)
	}
	for _, m := range mdw["ReadP"] {
		eps.ReadPEndpoint = m(eps.ReadPEndpoint)
	}
	for _, m := range mdw["UpdateP"] {
		eps.UpdatePEndpoint = m(eps.UpdatePEndpoint)
	}
	for _, m := range mdw["DeleteP"] {
		eps.DeletePEndpoint = m(eps.DeletePEndpoint)
	}
	for _, m := range mdw["CreateFeedback"] {
		eps.CreateFeedbackEndpoint = m(eps.CreateFeedbackEndpoint)
	}
	for _, m := range mdw["ReadFeedback"] {
		eps.ReadFeedbackEndpoint = m(eps.ReadFeedbackEndpoint)
	}
	for _, m := range mdw["PostAttendance"] {
		eps.PostAttendanceEndpoint = m(eps.PostAttendanceEndpoint)
	}
	for _, m := range mdw["ReadAttendance"] {
		eps.ReadAttendanceEndpoint = m(eps.ReadAttendanceEndpoint)
	}
	return eps
}
