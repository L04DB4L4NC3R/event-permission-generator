// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-12-20 06:04:20.455252818 +0530 IST m=+0.018420713

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "The last event manager you will ever need",
        "title": "Project Omega documentation",
        "contact": {},
        "license": {},
        "version": "0.1"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/accounts/{id}": {
            "get": {
                "description": "Generate a permission letter for the event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate a permission letter for the event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the event",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Event"
                        }
                    },
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "model.Event": {
            "type": "object",
            "properties": {
                "PROrequest": {
                    "type": "string"
                },
                "attendance": {
                    "type": "string"
                },
                "budget": {
                    "type": "string"
                },
                "campusEngineerRequest": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "clubName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "expectedParticipants": {
                    "type": "string"
                },
                "fromDate": {
                    "type": "string"
                },
                "fromTime": {
                    "type": "string"
                },
                "guest": {
                    "type": "object",
                    "$ref": "#/definitions/model.Guest"
                },
                "mainSponsor": {
                    "type": "object",
                    "$ref": "#/definitions/model.Participant"
                },
                "name": {
                    "type": "string"
                },
                "sacultyCoordinator": {
                    "type": "object",
                    "$ref": "#/definitions/model.Participant"
                },
                "studentCoordinator": {
                    "type": "object",
                    "$ref": "#/definitions/model.Participant"
                },
                "toDate": {
                    "type": "string"
                },
                "toTime": {
                    "type": "string"
                },
                "venue": {
                    "type": "string"
                }
            }
        },
        "model.Guest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "locationOfStay": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "stake": {
                    "type": "string"
                }
            }
        },
        "model.Participant": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "eventsAttended": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "registrationNumber": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
